int -> INT
suma -> IDENTIFIER
( -> OPEN_PAREN
float -> FLOAT
v -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
<<<<<<< HEAD
float -> FLOAT
f -> IDENTIFIER
= -> EQUAL
5 -> INTEGER
; -> FINAL
f -> IDENTIFIER
= -> EQUAL
f -> IDENTIFIER
+ -> PLUS
4 -> INTEGER
+ -> PLUS
2 -> INTEGER
* -> MULTI
3 -> INTEGER
=======
int -> INT
x -> IDENTIFIER
= -> EQUAL
1 -> INTEGER
; -> FINAL
rsta -> IDENTIFIER
( -> OPEN_PAREN
1 -> INTEGER
, -> COMMA
2 -> INTEGER
) -> CLOSE_PAREN
>>>>>>> e0988d96deef4cd42fae3af9d8df9e0794bbb37c
; -> FINAL
return -> RETURN
2 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
int -> INT
main -> MAIN
( -> OPEN_PAREN
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
miArr -> IDENTIFIER
[ -> OPEN_BRACKET
10 -> INTEGER
] -> CLOSE_BRACKET
; -> FINAL
return -> RETURN
1 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
