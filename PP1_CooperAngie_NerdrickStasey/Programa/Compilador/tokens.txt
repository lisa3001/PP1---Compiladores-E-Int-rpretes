int -> INT
resta -> IDENTIFIER
( -> OPEN_PAREN
int -> INT
v -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
x -> IDENTIFIER
; -> FINAL
x -> IDENTIFIER
= -> EQUAL
4 -> INTEGER
; -> FINAL
return -> RETURN
x -> IDENTIFIER
; -> FINAL
} -> CLOSE_KEY
int -> INT
suma -> IDENTIFIER
( -> OPEN_PAREN
int -> INT
v -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
x -> IDENTIFIER
; -> FINAL
x -> IDENTIFIER
= -> EQUAL
4 -> INTEGER
; -> FINAL
return -> RETURN
x -> IDENTIFIER
; -> FINAL
} -> CLOSE_KEY
int -> INT
rest -> IDENTIFIER
( -> OPEN_PAREN
int -> INT
v -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
x -> IDENTIFIER
; -> FINAL
x -> IDENTIFIER
= -> EQUAL
4 -> INTEGER
; -> FINAL
return -> RETURN
x -> IDENTIFIER
; -> FINAL
} -> CLOSE_KEY
int -> INT
main -> MAIN
( -> OPEN_PAREN
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
miArr -> IDENTIFIER
[ -> OPEN_BRACKET
10 -> INTEGER
] -> CLOSE_BRACKET
; -> FINAL
return -> RETURN
0 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
