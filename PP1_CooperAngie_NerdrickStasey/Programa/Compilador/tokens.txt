int -> INT
suma -> IDENTIFIER
( -> OPEN_PAREN
int -> INT
v -> IDENTIFIER
, -> COMMA
int -> INT
a -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
x -> IDENTIFIER
; -> FINAL
x -> IDENTIFIER
= -> EQUAL
8 -> INTEGER
; -> FINAL
y -> IDENTIFIER
= -> EQUAL
2 -> INTEGER
~ -> MODULE
3 -> INTEGER
} -> CLOSE_KEY
int -> INT
main -> MAIN
( -> OPEN_PAREN
) -> CLOSE_PAREN
{ -> OPEN_KEY
int -> INT
miArr -> IDENTIFIER
[ -> OPEN_BRACKET
10 -> INTEGER
] -> CLOSE_BRACKET
; -> FINAL
if -> IF
( -> OPEN_PAREN
5 -> INTEGER
> -> GREATER
2 -> INTEGER
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
1 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
else -> ELSE
{ -> OPEN_KEY
return -> RETURN
0 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
} -> CLOSE_KEY
