int -> INT
extra -> IDENTIFIER
( -> OPEN_PAREN
int -> INT
num -> IDENTIFIER
, -> COMMA
int -> INT
besito -> IDENTIFIER
) -> CLOSE_PAREN
{ -> OPEN_KEY
<<<<<<< HEAD
int -> INT
edad -> IDENTIFIER
= -> EQUAL
2 -> INTEGER
; -> FINAL
print -> PRINT
( -> OPEN_PAREN
"Ingresa tu edad: " -> CHARCHAIN
) -> CLOSE_PAREN
; -> FINAL
read -> READ
( -> OPEN_PAREN
edad -> IDENTIFIER
) -> CLOSE_PAREN
; -> FINAL
print -> PRINT
( -> OPEN_PAREN
"Tu edad es: " -> CHARCHAIN
) -> CLOSE_PAREN
; -> FINAL
print -> PRINT
( -> OPEN_PAREN
edad -> IDENTIFIER
) -> CLOSE_PAREN
=======
if -> IF
( -> OPEN_PAREN
23 -> INTEGER
> -> GREATER
24 -> INTEGER
== -> EQUAL_EQUAL
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
8 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
elif -> ELIF
( -> OPEN_PAREN
true -> TRUE
== -> EQUAL_EQUAL
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
4 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
elif -> ELIF
( -> OPEN_PAREN
true -> TRUE
!= -> DIFFERENT
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
8 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
else -> ELSE
{ -> OPEN_KEY
return -> RETURN
10 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
if -> IF
( -> OPEN_PAREN
23 -> INTEGER
> -> GREATER
24 -> INTEGER
== -> EQUAL_EQUAL
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
8 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
elif -> ELIF
( -> OPEN_PAREN
true -> TRUE
== -> EQUAL_EQUAL
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
4 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
elif -> ELIF
( -> OPEN_PAREN
true -> TRUE
!= -> DIFFERENT
false -> FALSE
) -> CLOSE_PAREN
{ -> OPEN_KEY
return -> RETURN
8 -> INTEGER
>>>>>>> 2343a4dac9a541ecf8662a394dee42881d85c91a
; -> FINAL
} -> CLOSE_KEY
else -> ELSE
{ -> OPEN_KEY
return -> RETURN
10 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
return -> RETURN
0 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
int -> INT
main -> MAIN
( -> OPEN_PAREN
) -> CLOSE_PAREN
{ -> OPEN_KEY
extra -> IDENTIFIER
( -> OPEN_PAREN
1 -> INTEGER
, -> COMMA
8 -> INTEGER
) -> CLOSE_PAREN
; -> FINAL
return -> RETURN
0 -> INTEGER
; -> FINAL
} -> CLOSE_KEY
